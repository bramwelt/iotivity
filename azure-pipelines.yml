---
pr:
  autoCancel: true
  paths:
    include:
      - '*'
    exclude:
      - Dockerfile

variables:
  scons.flags: '-Q -j 2'

resources:
  containers:
    - container: iotivity
      image: bramwelt2/iotivity:latest

stages:
  - stage: Android
    jobs:
      - job: Build
        container: iotivity
        pool:
          vmImage: 'ubuntu-latest'
        variables:
          scons.preset_args: "WITH_ENV=1 VERBOSE=true ERROR_ON_WARN=1"
        continueOnError: false
        strategy:
          matrix:
            android-unsecured:
              scons.args: "RELEASE=false TARGET_OS=android TARGET_ARCH=armeabi"
            android-unsecured-release:
              scons.args: "RELEASE=true TARGET_OS=android TARGET_ARCH=armeabi"
            android-secured:
              scons.args: "RELEASE=false TARGET_OS=android TARGET_ARCH=armeabi SECURED=1"
            android-secured-release:
              scons.args: "RELEASE=true TARGET_OS=android TARGET_ARCH=armeabi SECURED=1"
        steps:
          - script: sudo chmod 755 /extlibs/android/ndk/android-ndk-r10e
          - script: sudo chmod 755 /extlibs/android/sdk/android-sdk_r24.2/platforms/android-21_r02
          - script: sudo chmod 755 /extlibs/android/sdk/build-tools/20.0.0
          - script: sudo cp -r /extlibs/* extlibs/
          - script: scons $(scons.flags) $(scons.preset_args) $(scons.args)
          - publish: "android/android_api/base/build/outputs/**"
            artifact: Android-$(name)
  - stage: Windows
    jobs:
      - job: Build
        pool:
          vmImage: 'vs2017-win2016'
          # TODO: Matrix
          # matrix amd64, x86, vs207, vs2015
          # 'vs2015-win2012r2'
        continueOnError: false
        variables:
          # TODO: Verify if all these work/needed?
          scons.preset_args: "WITH_ENV=1 VERBOSE=true ERROR_ON_WARN=1"
          MSVC_VERSION: "14.0"
          TARGET_ARCH: "x86"
          BUILD_ARGS: "-logging -noSecurity"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '2.7'
              addToPath: true
              architecture: 'x86'
          - script: |
              python.exe -m pip install -U setuptools
              python.exe -m pip install -U wheel
              python.exe -m pip install "scons<3"
            # TODO:
            # sqlite
            # boost
            # gunit
            # hippomocks
            # rapidjson
          - script: git clone https://github.com/intel/tinycbor.git extlibs/tinycbor/tinycbor -b v0.5.1
          - script: git clone https://github.com/dthaler/libcoap.git extlibs/libcoap/libcoap -b IoTivity-1.4
          - script: git clone https://github.com/ARMmbed/mbedtls.git extlibs/mbedtls/mbedtls -b mbedtls-2.4.2
          - script: call run.bat build -arch %TARGET_ARCH% %BUILD_ARGS%
          - publish: "out/"
            artifact: Windows-$(name)
  - stage: Tizen
    jobs:
      - job: Build
        container: iotivity
        continueOnError: true
        pool:
          vmImage: 'ubuntu-latest'
        variables:
          scons.preset_args: "WITH_ENV=1 VERBOSE=true ERROR_ON_WARN=1"
        strategy:
          matrix:
            tizen-secured:
              scons.args: "RELEASE=false BUILD_JAVA=1 TARGET_TRANSPORT='IP'"
              name: 'Secured'
            tizen-secured-release:
              scons.args: "RELEASE=false BUILD_JAVA=1 TARGET_TRANSPORT='IP'"
              name: 'Secured Release'
            tizen-unsecured:
              scons.args: "RELEASE=false BUILD_JAVA=1 TARGET_TRANSPORT='IP'"
              name: 'Unsecured'
            tizen-unsecured-release:
              scons.args: "RELEASE=false BUILD_JAVA=1 TARGET_TRANSPORT='IP'"
              name: 'Unsecured Release'
        steps:
          - script: cp -r /extlibs/* extlibs/
          - script: scons $(scons.flags) $(scons.preset_args) $(scons.args)
          - publish: "out/"
            artifact: Tizen-$(name)
  - stage: Unittest
    jobs:
      - job: Unittest
        container: iotivity
        continueOnError: true
        pool:
          vmImage: 'ubuntu-latest'
        variables:
          scons.preset_args: "WITH_ENV=1 VERBOSE=true TEST=1"
        strategy:
          matrix:
            unit-test-unsecured:
              scons.args: "RELEASE=false TARGET_TRANSPORT='IP' SECURED=0"
              name: 'Unsecured'
            unit-test-secured:
              scons.args: "RELEASE=false TARGET_TRANSPORT='IP' SECURED=1"
              name: 'Secured'
        steps:
          - script: cp -r /extlibs/* extlibs/
          - script: scons $(scons.flags) $(scons.preset_args) $(scons.args)
          - publish: "out/"
            artifact: Unittest-$(name)
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: xUnit
              testResultsFiles: 'out/**/test_out/*.xml'
  - stage: Linux
    jobs:
      - job: Build
        container: iotivity
        pool:
          vmImage: 'ubuntu-latest'
        variables:
          scons.preset_args: "WITH_ENV=1 VERBOSE=true ERROR_ON_WARN=1"
        strategy:
          matrix:
            linux-secured-with-java:
              scons.args: "RELEASE=false BUILD_JAVA=1 TARGET_TRANSPORT='IP'"
              name: 'Secured with Java'
            linux-unsecured-with-java:
              scons.args: "RELEASE=true BUILD_JAVA=1 TARGET_TRANSPORT='IP'"
              name: 'Secured with Java Release'
            simulator:
              scons.args: "RELEASE=false SIMULATOR=1 SECURED=0 TARGET_TRANSPORT='IP'"
            simulator-release:
              scons.args: "RELEASE=true SIMULATOR=1 SECURED=0 TARGET_TRANSPORT='IP'"
            linux-unsecured:
              scons.args: "RELEASE=false SECURED=0"
              name: 'Unsecured'
            linux-unsecured-release:
              scons.args: "RELEASE=true SECURED=0"
              name: 'Unsecured Release'
            linux-unsecured-with-rm:
              scons.args: "RELEASE=false SECURED=0 ROUTING='GW'"
              name: 'Unsecured with RM'
            linux-unsecured-with-rm-release:
              scons.args: "RELEASE=true SECURED=0 ROUTING='GW'"
              name: 'Unsecured with RM Release'
            linux-unsecured-with-tcp:
              scons.args: "RELEASE=false WITH_TCP=1 TARGET_TRANSPORT='IP' SECURED=0"
              name: 'Unsecured with TCP'
            linux-unsecured-with-tcp-release:
              scons.args: "RELEASE=true WITH_TCP=1 TARGET_TRANSPORT='IP' SECURED=0"
              name: 'Unsecured with TCP Release'
            linux-secured:
              scons.args: "RELEASE=false"
              name: 'Secured'
            linux-secured-release:
              scons.args: "RELEASE=true"
              name: 'Secured Release'
            linux-secured-with-tcp:
              scons.args: "RELEASE=false WITH_TCP=1 WITH_CLOUD=1"
              name: 'Secured with TCP'
            linux-secured-with-tcp-release:
              scons.args: "RELEASE=true WITH_TCP=1 WITH_CLOUD=1"
              name: 'Secured with TCP Release'
        steps:
          - script: cp -r /extlibs/* extlibs/
          - script: scons $(scons.flags) $(scons.preset_args) $(scons.args)
          - publish: "out/"
            artifact: Linux-$(name)
